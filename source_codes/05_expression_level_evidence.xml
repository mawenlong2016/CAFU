<tool id="expression_level_evidence" name="Expression-level Evidence">
	<description></description>
	<requirement type="package" version="1.2.0">getopt</requirement>
	<command>
		mkdir $reference_file.files_path ;
		cd $reference_file.files_path ;
		/home/chenzhuod/galaxy/tools/CAFU/RSEM-1.3.1/rsem-prepare-reference --bowtie2 --bowtie2-path /home/chenzhuod/galaxy/tools/CAFU/bowtie2-2.3.4.3-linux-x86_64 -p 3 ${input_fasta} ${reference_name} > ${reference_name}.log;
		
		mkdir -p /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/transBed ;
		/usr/bin/python /home/chenzhuod/galaxy/tools/CAFU/00_seq_len.py ${input_fasta} > /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/allTrans_len ;
		grep "Contig" /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/allTrans_len > /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/assembledTrans_len ;
		
		Rscript /home/chenzhuod/galaxy/tools/CAFU/05_createTransBed.R ;
		sed -i 's/ //g' /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/transBed/* ;
		
		#if $readtype.single_or_paired == "single-end"
			bash /home/chenzhuod/galaxy/tools/CAFU/05_expression_level_evidence_SE.sh $output_se $reference_file.files_path/$reference_name ${thread};
			Rscript /home/chenzhuod/galaxy/tools/CAFU/05_expression_level_evidence.R --input $output_se --output $expressedTrans_ID ;
			
		#elif $readtype.single_or_paired == "paired-end"
			bash /home/chenzhuod/galaxy/tools/CAFU/05_expression_level_evidence_PE.sh $output_pe $reference_file.files_path/$reference_name ${thread};
			Rscript /home/chenzhuod/galaxy/tools/CAFU/05_expression_level_evidence.R --input $output_pe --output $expressedTrans_ID ;
		#end if
		sed -i 's/"//g' $expressedTrans_ID ;
		
		bash /home/chenzhuod/galaxy/tools/CAFU/05_readCov.sh ;
		Rscript /home/chenzhuod/galaxy/tools/CAFU/05_readCov.R --output1 $read_coverage --output2 $readCov_ID ;
		
		sort $expressedTrans_ID > /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/expressedTrans_ID ;
		sort $readCov_ID > /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/readCov_ID ;
		comm -12 /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/expressedTrans_ID /home/chenzhuod/galaxy/database/files/Expression/expression_evidence/readCov_ID > $confidentTrans_ID ;
		
	</command>
	<inputs>
		<param name="input_fasta" type="data" format="fasta" label="All transcripts sequences" />
		<param name="reference_name" type="text" value="rsem_ref_name" label="Reference name">
			<help>A one word name for this RSEM reference containing only letters, digits, and underscore characters</help>
			<validator type="regex" message="Use only letters, digits, and underscore characters">^\w+$</validator>
		</param>
		
		<conditional name="readtype">
			<param name="single_or_paired" type="select" label="Single-end or paired-end reads?">
				<option value="single-end" selected="true">Single-end</option>
				<option value="paired-end" selected="true">Paired-end</option>
			</param>		
		</conditional>
		
		<param name="thread" type="integer" value="3" label="Threads"/>
	</inputs>
	<stdio>
		<exit_code range="1:"  level="fatal" description="Error Running tissue-specific" />
	</stdio>
	<outputs>
		<data name="reference_file" format="rsem_ref" label="RSEM ${reference_name} reference"/>
		<data name="read_coverage" format="txt" label="Read coverage results of each assembled transcript in all samples"/>
		<data name="readCov_ID" format="txt" label="Confident transcript ID filtered by read coverage"/>
		<data name="output_se" format="txt" label="Expression value of all transcripts" >
			<filter>readtype['single_or_paired'] == "single-end"</filter>
		</data>
		<data name="expressedTrans_ID" format="txt" label="Confident transcript ID filtered by expression value" >
			<filter>readtype['single_or_paired'] == "single-end"</filter>
		</data>
		<data name="output_pe" format="txt" label="Expression value of all transcripts" >
			<filter>readtype['single_or_paired'] == "paired-end"</filter>
		</data>
		<data name="expressedTrans_ID" format="txt" label="Confident transcript ID filtered by expression value" >
			<filter>readtype['single_or_paired'] == "paired-end"</filter>
		</data>
		<data name="confidentTrans_ID" format="txt" label="Confident transcript ID by expression-level evidence"/>
	</outputs>
</tool>
